openapi: 3.0.1
info:
  title: Library
  description: Library API SErver
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  tags:
    - name: Books
      description: Info on all of books in the library and management operations
    - name: Users
      description: User registration, login and info
    - name: Reservations
      description: Book reservations
    - name: Loans
      description: Book loans
    - name: Librarian notes
      description: Notes made by librarians on readers
  /books/{id}:
    get:
      tags:
        - Books
      operationId: getBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookDTO'
    put:
      tags:
        - Books
      operationId: updateBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - Books
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /users/register/reader:
    post:
      tags:
        - Users
      operationId: registerReader
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReaderRegisterDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users/register/librarian:
    post:
      tags:
        - Users
      operationId: registerLibrarian
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibrarianRegisterDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users/login:
    post:
      tags:
        - Users
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /reservations/reserve:
    post:
      tags:
        - Reservations
      operationId: reserveBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /loans/return/{loanId}:
    post:
      tags:
        - Loans
      operationId: returnBook
      parameters:
        - name: loanId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /loans/issue:
    post:
      tags:
        - Loans
      operationId: issueLoan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /librarian-notes/add:
    post:
      tags:
        - Librarian notes
      operationId: addNoteToUser
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /books:
    get:
      tags:
        - Books
      operationId: getAllBooks
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookDTO'
    post:
      tags:
        - Books
      operationId: addBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /loans/{loanId}/status:
    patch:
      tags:
        - Loans
      operationId: updateLoanStatus
      parameters:
        - name: loanId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /users/{userId}:
    get:
      tags:
        - Users
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users/reader/{cardNumber}:
    get:
      tags:
        - Users
      operationId: getReaderByCardNumber
      parameters:
        - name: cardNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users/block/{readerId}:
    get:
      tags:
        - Users
      operationId: blockReader
      parameters:
        - name: readerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /reservations/user/{userId}:
    get:
      tags:
        - Reservations
      operationId: getReservationsForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationDTO'
  /reservations/expired:
    get:
      tags:
        - Reservations
      operationId: getExpiredReservations
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationDTO'
  /loans/user/{userId}:
    get:
      tags:
        - Loans
      operationId: getLoansForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /loans/overdue:
    get:
      tags:
        - Loans
      operationId: getOverdueLoans
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /librarian-notes/user/{userId}:
    get:
      tags:
        - Librarian notes
      operationId: getNotesForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibrarianNoteDTO'
  /books/search:
    get:
      tags:
        - Books
      operationId: searchBooks
      parameters:
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: author
          in: query
          required: false
          schema:
            type: string
        - name: genre
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookDTO'
  /reservations/cancel/{reservationId}:
    delete:
      tags:
        - Reservations
      operationId: cancelReservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    BookDTO:
      required:
        - author
        - code
        - genre
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        code:
          type: string
        genre:
          type: string
        available:
          type: boolean
        loanPeriod:
          type: integer
          format: int32
        nextReturnDate:
          type: string
          format: date
        notificationMessage:
          type: string
    ReaderRegisterDTO:
      type: object
      properties:
        phone:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        age:
          type: integer
          format: int32
        password:
          type: string
    LibrarianRegisterDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        age:
          type: integer
          format: int32
    UserLoginDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ReservationDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        bookId:
          type: integer
          format: int64
        reservationDate:
          type: string
          format: date
        reservationExpiryDate:
          type: string
          format: date
    LoanDTO:
      required:
        - loanDate
        - returnDueDate
      type: object
      properties:
        userId:
          type: integer
          format: int64
        bookId:
          type: integer
          format: int64
        loanDate:
          type: string
          format: date
        returnDueDate:
          type: string
          format: date
        status:
          pattern: issued|returned|overdue
          type: string
    LibrarianNoteDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        note:
          type: string
        createdAt:
          type: string
          format: date-time
